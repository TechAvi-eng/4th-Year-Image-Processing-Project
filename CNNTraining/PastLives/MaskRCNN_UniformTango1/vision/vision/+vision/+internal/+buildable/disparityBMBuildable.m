classdef disparityBMBuildable < coder.ExternalDependency %#codegen
    % disparityBMBuildable - encapsulate extractFeature (FREAK) implementation library
    
    % Copyright 2012-2023 The MathWorks, Inc.
    
    
    methods (Static)
        
        function name = getDescriptiveName(~)
            name = 'disparityBMBuildable';
        end
        
        function b = isSupportedContext(~)
            b = true; % supports non-host target
        end
        
        function updateBuildInfo(buildInfo, context)
            buildInfo.addIncludePaths({fullfile(matlabroot,'toolbox', ...
                'vision','builtins','src','ocv','include'), ...
                fullfile(matlabroot,'toolbox', ...
                'images','opencv','opencvcg', 'include')} );
            
            srcPaths = fullfile(matlabroot,'toolbox', ...
                'vision','builtins','src','ocv');
            buildInfo.addSourceFiles({'disparityBMCore.cpp'},srcPaths);
            buildInfo.addSourcePaths(srcPaths, 'CVT_GROUP');
            
            buildInfo.addIncludeFiles({'vision_defines.h', ...
                'disparityBM.hpp', ...
                'disparityBMCore_api.hpp'}); % no need 'rtwtypes.h'
            
            vision.internal.buildable.portableOpenCVBuildInfo(buildInfo, context, ...
                'disparityBM');
        end
        
        %------------------------------------------------------------------
        % write all supported data-type specific function calls
        function outDisparity = disparityBM_compute(image1_u8, image2_u8, opt)
            
            coder.inline('always');
            coder.cinclude('disparityBMCore_api.hpp');
            
            nRows = int32(size(image1_u8, 1)); % original (before transpose)
            nCols = int32(size(image1_u8, 2)); % original (before transpose)
            outSize = [nRows nCols];
            outDisparity = coder.nullcopy(zeros(outSize,'single'));
            
            paramStruct = struct( ...
                'preFilterCap', int32(opt.preFilterCap), ...
                'SADWindowSize', int32(opt.SADWindowSize), ...
                'minDisparity', int32(opt.minDisparity), ...
                'numberOfDisparities', int32(opt.numberOfDisparities), ...
                'textureThreshold', int32(opt.textureThreshold), ...
                'uniquenessRatio', int32(opt.uniquenessRatio), ...
                'disp12MaxDiff', int32(opt.disp12MaxDiff), ...
                'preFilterType', int32(opt.preFilterType), ...
                'preFilterSize', int32(opt.preFilterSize), ...
                'speckleWindowSize', int32(opt.speckleWindowSize), ...
                'speckleRange', int32(opt.speckleRange), ...
                'trySmallerWindows', int32(opt.trySmallerWindows), ...
                'invalidDisparityValue', single(opt.invalidDisparityValue));
            
            coder.cstructname(paramStruct,'cvstDBMStruct_T','extern','HeaderFile', 'disparityBMCore_api.hpp');
            
            if coder.isColumnMajor
                coder.ceval('-col', 'disparityBM_compute',...
                    coder.ref(image1_u8), ...
                    coder.ref(image2_u8), ...
                    nRows, nCols, ...
                    coder.ref(outDisparity), ...
                    coder.ref(paramStruct));
            else
                coder.ceval('-row', 'disparityBM_computeRM',...
                    coder.ref(image1_u8), ...
                    coder.ref(image2_u8), ...
                    nRows, nCols, ...
                    coder.ref(outDisparity), ...
                    coder.ref(paramStruct));
            end
            
        end
    end
end
