clear
clc
close all
addpath("~/Scratch/MRCNNsrc") %for custom cnn and training loops

%%
miniBatchsize=4;

trainClassNames = ["CellA"];
imageSizeTrain = [528/2 704/2 4];

ABs = [14 14; 14 21; 21 14;...
    21 21; 21 32; 32 21;...
    32 32; 47 32; 32 47;...
    47 47; 71 47; 47 71;...
    71 71; 107 71; 71 107;...
    107 107]/2;

 
net = MRCNN(trainClassNames,ABs,InputSize=imageSizeTrain, ScaleFactor=[1 1]/16,ModelName="ResNet101")


ds = fileDatastore("~/Scratch/AllDSFs/DSFs", ReadFcn=@(x)MATReaderDWT(x)); %training data
valds = fileDatastore("~/Scratch/AllDSFs/TestDSFs", ReadFcn=@(x)MATReader1C(x)); %validation data

preview(ds)


%%
if canUseGPU
    executionEnvironment = "gpu";
    gpuDevice(1)
else
    executionEnvironment = "cpu";
end
clear ans

%% phase 1, initializing all layers
options = trainingOptions("adam", ...
    InitialLearnRate=5e-5, ...
    LearnRateSchedule="piecewise", ...
    LearnRateDropPeriod=100, ...
    LearnRateDropFactor=1, ...
    Plot="none", ...  
    MaxEpochs=2, ...
    MiniBatchSize=miniBatchsize, ...
    BatchNormalizationStatistics="moving", ...
    ResetInputNormalization=false, ...
    ExecutionEnvironment=executionEnvironment, ...
    CheckpointPath="~/Scratch/Checkpoints", ...
    CheckpointFrequency=10, ...
    CheckpointFrequencyUnit="epoch", ...
    VerboseFrequency=1, ...
    Shuffle="every-epoch")

[net,info1] = trainMRCNN(ds,net,options, NumStrongestRegions=1000, NumRegionsToSample=128, PositiveOverlapRange=[0.5 1], NegativeOverlapRange=[0 0.5], ForcedPositiveProposals=false)
save("Res101DWT-Warmup.mat");

%% phase 2, focus on region proposal network
options = trainingOptions("adam", ...
    InitialLearnRate=1e-4, ...
    LearnRateSchedule="piecewise", ...
    LearnRateDropPeriod=100, ...
    LearnRateDropFactor=1, ...
    Plot="none", ...  
    MaxEpochs=5, ...
    MiniBatchSize=miniBatchsize, ...
    BatchNormalizationStatistics="moving", ...
    ResetInputNormalization=false, ...
    ExecutionEnvironment=executionEnvironment, ...
    CheckpointPath="~/Scratch/Checkpoints", ...
    CheckpointFrequency=10, ...
    CheckpointFrequencyUnit="epoch", ...
    VerboseFrequency=1, ...
    Shuffle="every-epoch")

[net,info2] = trainMRCNN(ds,net,options,"FreezeSubNetwork","backbone", NumStrongestRegions=1000, NumRegionsToSample=128, PositiveOverlapRange=[0.5 1], NegativeOverlapRange=[0 0.5], ForcedPositiveProposals=false)
save("Res101DWT-RPNFOCUS.mat");


%% phase 3, train everything
options = trainingOptions("adam", ...
    InitialLearnRate=1e-3, ...
    LearnRateSchedule="piecewise", ...
    LearnRateDropPeriod=1, ...
    LearnRateDropFactor=0.2^(1/11), ...
    Plot="none", ...  
    MaxEpochs=40, ...
    MiniBatchSize=miniBatchsize, ...
    BatchNormalizationStatistics="moving", ...
    ResetInputNormalization=false, ...
    ExecutionEnvironment=executionEnvironment, ...
    CheckpointPath="~/Scratch/Checkpoints", ...
    CheckpointFrequency=10, ...
    CheckpointFrequencyUnit="epoch", ...
    VerboseFrequency=1, ...
    Shuffle="every-epoch", ...
    ValidationData=valds, ...
    ValidationFrequency=ceil(10*3188/miniBatchsize), ...
    ValidationPatience=40)


%%
[net,info3] = trainMRCNN(ds,net,options, NumStrongestRegions=1000, NumRegionsToSample=128, PositiveOverlapRange=[0.5 1], NegativeOverlapRange=[0 0.5], ForcedPositiveProposals=false)
save("Res101DWT-FINAL.mat");